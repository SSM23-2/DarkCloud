안녕하세요. 지금부터 창의과제 2차 시작발표를 시작하겠습니다.
발표자는 23-2기 최현빈입니다.
차례는 간략하게 팀 소개, 주제 선정배경, 개발 목적, 개발 목표, 개발 내용, 개발 일정, 개발 환경 순으로 진행하겠습니다.
먼저 팀 소개 입니다.
저희 팀 이름은 Dark Cloud이며, 팀원은 23-2기 최현빈, 윤재석, 장정규입니다.
저희가 이 주제를 선정하게 된 배경은 다음과 같습니다.

Daum 클라우드, Naver N 드라이브, 구글 드라이브 등 현재 시행되고 있는 클라우드 서비스는 동기화 방식을 채택하고 있습니다. 예를 들어, 만약 사진을 찍엇다면 그 파일이 스마트폰에 저장되게 되고, 동시에 클라우드 서버에도 전송이 되서 저장되는, 즉 중복 저장이 됩니다. 이것은 진정한 클라우드 서비스라고 할 수 없으며, 저희가 이 프로젝트를 진행하게 된 제일 큰 이유가 되었습니다.

위의 그림은 전 Ppt에서 설명했던 다른 클라우드 시스템이 적용하는 동기화 방식을 그림으로 나타낸 것이고, 저희 개발 목적은 바로 아래 그림에서 보실 수 있습니다. 파일 I/O 동작이 발생하게 되면, 가상 디바이스 드라이버가 그것을 캐치하여 실제 클라우드 서버에 바로 파일을 전송하게 하는 것입니다.

저희 개발 목표는 다음과 같습니다. 먼저 가상 물리디스크를 구현하여 안드로이드 시스템의 외장 메모리로 인식시킵니다. 실제로 파일의 입출력 동작이 발생할 때 물리디스크에서 데이터의 입출력이 발생되지 않고, 클라우드 서버에서 데이터를 다운받아 전달하도록 구현합니다.

또한 Node.js를 사용하여 서버를 구현하고, 기본적인 파일 스토리지 기능을 가지며 추가적으로 RESTful 까지 제공하여 확장성잇는 클라우드 서버를 구현할 것입니다.

마지막으로, 사용자가 편리하게 Dark Cloud를 이용할 수 있도록 프레임워크 소스 파일을 수정하여 안드로이드 상태바에 Dark Cloud 작동여부를 확인할 수 있도록 구현하고, Notification bar에서 Dark cloud의 동작 상태를 변경할 수 있도록 토글 버튼을 구현합니다. 또한 환경설정에서도 계정 설정 등 기본적인 클라우드 설정 기능을 구현할 것입니다.

다음은 개발 내용입니다. 먼저 Server는 Node.js로 구현할 예정이고, Database는 MongoDB를 선택하였습니다. Restful을 지원하여 조금 더 확장성 있는 서버를 만들 예정입니다. Android 쪽은 크게 프레임워크 쪽과 커널 두 부분을 수정할 예정입니다. 프레임워크는 앞에서 얘기했듯이 Custom Notification 바와 Custom Setting 부분을 수정할 것이고, 커널 부분은 가상 디바이스 드라이버를 구현하여 파일 I/O를 감지하면 시그널을 보내게 하고, Daemon Process에서 시그널을 받아 실제 서버와 통신을 하도록 만들겠습니다. 또한 효율적인 작업 처리를 위하여 캐시 기능도 구현할 예정입니다.

다음은 개발 일정입니다.
마지막으로 개발 환경은 다음과 같습니다.

이상 창의과제 2차 시작발표를 마치겠습니다. 질문 있으시면 해주시면 감사하겠습니다.