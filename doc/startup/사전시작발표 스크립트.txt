안녕하세요 저희는 23-2기 윤재석, 23-2 장정규, 23-2 최현빈으로 이루어진 S-Cloud팀입니다.
지금부터 창의과제 1차 시작발표를 시작하겠습니다.

차례는 주오후 6:32 2013-11-14오후 6:32 2013-11-14제, 선정배경, 개발 목적, 개발 환경, 시스템 아키텍쳐, 개발 방법, 시나리오, 개발 일정순으로 진행하도록 하겠습니다.

저희 팀이 이번에 개발할 주제는 Android에 Cloud Service를 적용한 것입니다.

저희가 왜 이 주제를 선정하게 되었는지를 설명하기 전에, 현재의 클라우드 시스템을 서비스하는 사이트 중에서 제법 유명한 세 곳을 예로 들어 보겠습니다.

다음 클라우드, N 드라이브, Google 드라이브 세 곳 전부 현재 동기화 시스템을 사용하고 있기 때문에, Server에 있는 파일 내용이 바뀌게 되면, 자동으로 Local의 파일 내용이 동기화되어 바뀌게 됩니다. 즉, Server에 있는 파일이 Local에 중복되어 존재하게 되는 것입니다.

이것은 저희가 생각하는 궁극적인 Cloud Service라고 할 수 없으며, 저희가 이 주제를 선택한 이유가 바로 여기서였습니다.

S-Cloud는 동기화 방식이 아닌, 데이터가 서버에 바로 저장되며 
필요할 때마다 그 때 불러서 사용 가능합니다. 
 
예를 들어서 사진을 찍으면 바로 서버에 전송되며, 서버에 파일이 저장됩니다. 하지만 Android의 갤러리에서는 그 사진을 바로 확인 가능합니다.

S-Cloud를 사용하는 사용자는 안정된 네트워크 하에서 무한대의 용량을 사용 가능하게 되는 것입니다.

저희 개발환경은 다음과 같습니다.

다음은 시스템 아키텍쳐입니다.

Cloud Server는 Ubuntu 환경에서 node Js로 개발하게 될 것이며, DB는 mySql을 사용할 것입니다.
Android 쪽은 Virtual Driver를 구현해서, 기본적인 File I/O을 중간에 캐칭하여 시그널로 Daemon Process에게 던지게 됩니다.
Daemon Process는 시그널을 받아서 실제 클라우드 서버와 통신을 하게 됩니다. 그 안에서 내부적으로는 Caching 개념을 가지고 있어서 반복적인 작업을 효율적으로 처리하게 됩니다. 그리고 사용자가 쉽게 이 서비스를 제어하기 위해서 Custom Notification 바에 올릴 예정입니다.


다음은 저희가 가정한 시나리오입니다.

S-Cloud를 사용하지 않는 J모씨는 셀카, 여행 때 찍은 소중한 사진들을 스마트폰에 저장하고 있습니다.
 일반 N모사의 드라이브를 사용하는 그는 메모리 용량에 한계를 느껴서 소중한 사진들을 다른 곳에 저장할 수 밖에 없습니다.

반면에 S-Cloud를 사용하는 K모양은 자신의 소중한 사진들을 S-Cloud 서비스를 이용함으로써 용량의 제한없이 마음껏 사용할 수 있었습니다. 이것이 저희가 개발하려는 S-Cloud와 여타 다른 CLouding Service와의 제일 큰 차이점이자 장점이라고 생각합니다.

저희 팀의 발표는 여기까지입니다. 들어주셔서 감사합니다.

혹시 질문사항 있으시면 말씀해주시면 감사히 듣겠습니다.


파일 , APK 같은 것들을 서버에 백업가능?
핸드폰이 초기화가 되더라도 서버에서 불러오면 그 상태를 저장
